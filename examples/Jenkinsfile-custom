@Library('jenkins-shared@main') _

pipeline {
    agent { label 'beta' }

    stages {
        stage('Setup') {
            steps {
                script {
                    // C√≥ th·ªÉ t√πy ch·ªânh m·ªôt s·ªë tham s·ªë khi c·∫ßn
                    pipelineSetup([
                        namespace: 'my-custom-namespace',
                        registry: 'my-registry.com/project'
                    ])
                }
            }
        }

        stage('Get Config') {
            steps {
                script {
                    // C√≥ th·ªÉ t√πy ch·ªânh ConfigMap c·ª• th·ªÉ
                    k8sGetConfig([
                        generalConfigmap: 'shared-config',
                        items: [
                            'Dockerfile': 'build/Dockerfile',
                            '.env': 'config/.env'
                        ]
                    ])
                }
            }
        }

        stage('Build & Push') {
            steps {
                script {
                    // C√≥ th·ªÉ t√πy ch·ªânh dockerfile path
                    dockerBuildPush([
                        dockerfile: 'docker/Dockerfile',
                        context: './app'
                    ])
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // C√≥ th·ªÉ t√πy ch·ªânh deployment name
                    k8sSetImage([
                        deployment: 'my-custom-deployment'
                    ])
                }
            }
        }
    }

    post {
        success {
            script {
                // C√≥ th·ªÉ t√πy ch·ªânh success message
                telegramNotify([
                    message: """‚úÖ *Deploy th√†nh c√¥ng!*

üì¶ *Project:* `${env.REPO_NAME}`
üåø *Branch:* `${env.REPO_BRANCH}`
üë§ *User:* `${env.GIT_USER}`
üöÄ *Custom deployment completed*

üîó *Build:* [#${env.BUILD_NUMBER}](${env.BUILD_URL})"""
                ])
            }
        }

        failure {
            script {
                telegramNotify([
                    message: """‚ùå *Build th·∫•t b·∫°i!*

üì¶ *Project:* `${env.REPO_NAME}`
üåø *Branch:* `${env.REPO_BRANCH}`
üë§ *User:* `${env.GIT_USER}`

üîó *Build:* [#${env.BUILD_NUMBER}](${env.BUILD_URL})"""
                ])
            }
        }
    }
}